// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POC_DataAccess.Data;

#nullable disable

namespace POC_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240329114227_searrchstudentDetails_RRRRR")]
    partial class searrchstudentDetails_RRRRR
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("POC_Models.Models.Courses", b =>
                {
                    b.Property<int>("Id_Courses")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Courses"));

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Courses");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("POC_Models.Models.Grades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Grade = "A"
                        },
                        new
                        {
                            Id = 2,
                            Grade = "B"
                        },
                        new
                        {
                            Id = 3,
                            Grade = "C"
                        },
                        new
                        {
                            Id = 4,
                            Grade = "D"
                        },
                        new
                        {
                            Id = 5,
                            Grade = "E"
                        });
                });

            modelBuilder.Entity("POC_Models.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email_Student")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_Student")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Student")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email_Student = "1@email.com",
                            Name_Student = "Student 1",
                            Phone_Student = "1236547890"
                        });
                });

            modelBuilder.Entity("POC_Models.Models.StudentCourse", b =>
                {
                    b.Property<int>("SId")
                        .HasColumnType("int");

                    b.Property<int>("Cid")
                        .HasColumnType("int");

                    b.HasKey("SId", "Cid");

                    b.HasIndex("Cid");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("POC_Models.Models.StudentDetails", b =>
                {
                    b.Property<int>("Id_Student")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Student"));

                    b.Property<string>("Email_Student")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName_Student")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("MotherName_Student")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Student")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("firstName_Student")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName_Student")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Student");

                    b.HasIndex("GradeId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("StudentDetails");

                    b.HasData(
                        new
                        {
                            Id_Student = 1,
                            Email_Student = "1@email.com",
                            FatherName_Student = "F1",
                            GradeId = 1,
                            MotherName_Student = "M1",
                            Phone_Student = "1236547890",
                            StudentId = 1,
                            firstName_Student = "Student",
                            lastName_Student = "1"
                        });
                });

            modelBuilder.Entity("POC_Models.Models.Teacher", b =>
                {
                    b.Property<int>("Id_Teacher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Teacher"));

                    b.Property<string>("Email_Teacher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_Teacher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Teacher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Teacher");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("POC_Models.Models.TeacherCourses", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCourses");
                });

            modelBuilder.Entity("POC_Models.Models.StudentCourse", b =>
                {
                    b.HasOne("POC_Models.Models.Courses", "Courses")
                        .WithMany("studentCourses")
                        .HasForeignKey("Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POC_Models.Models.StudentDetails", "StudentDetails")
                        .WithMany("studentCourses")
                        .HasForeignKey("SId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("StudentDetails");
                });

            modelBuilder.Entity("POC_Models.Models.StudentDetails", b =>
                {
                    b.HasOne("POC_Models.Models.Grades", "Grade")
                        .WithMany("StudentDetails")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POC_Models.Models.Student", "Student")
                        .WithOne("StudentDetails")
                        .HasForeignKey("POC_Models.Models.StudentDetails", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("POC_Models.Models.TeacherCourses", b =>
                {
                    b.HasOne("POC_Models.Models.Courses", "Courses")
                        .WithMany("teacherCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POC_Models.Models.Teacher", "Teacher")
                        .WithMany("teacherCourses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("POC_Models.Models.Courses", b =>
                {
                    b.Navigation("studentCourses");

                    b.Navigation("teacherCourses");
                });

            modelBuilder.Entity("POC_Models.Models.Grades", b =>
                {
                    b.Navigation("StudentDetails");
                });

            modelBuilder.Entity("POC_Models.Models.Student", b =>
                {
                    b.Navigation("StudentDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("POC_Models.Models.StudentDetails", b =>
                {
                    b.Navigation("studentCourses");
                });

            modelBuilder.Entity("POC_Models.Models.Teacher", b =>
                {
                    b.Navigation("teacherCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
